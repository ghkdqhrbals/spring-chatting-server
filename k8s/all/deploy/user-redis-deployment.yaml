apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-prod.yaml
    kompose.version: 1.31.0 (HEAD)
    mode: standalone
    name: redis
  creationTimestamp: null
  labels:
    io.kompose.service: user-redis
  name: user-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: user-redis
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-prod.yaml
        kompose.version: 1.31.0 (HEAD)
        mode: standalone
        name: redis
      creationTimestamp: null
      labels:
        io.kompose.network/spring-chatting-server-default: "true"
        io.kompose.service: user-redis
    spec:
      containers:
        - args:
            - redis-server
            - /usr/local/conf/redis.conf
          image: redis:latest
          name: user-redis
          ports:
            - containerPort: 6379
              hostPort: 6379
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: user-redis-claim0
            - mountPath: /usr/local/conf/redis.conf
              name: user-redis-claim1
      restartPolicy: Always
      volumes:
        - name: user-redis-claim0
          persistentVolumeClaim:
            claimName: user-redis-claim0
        - name: user-redis-claim1
          persistentVolumeClaim:
            claimName: user-redis-claim1
status: {}
